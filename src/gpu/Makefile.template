.RECIPEPREFIX=+++ 
CUDA_PATH ?= 

HOST_COMPILER ?= icpc
NVCC          := $(CUDA_PATH)/bin/nvcc -ccbin $(HOST_COMPILER) 
NVCCFLAGS   := 
INCLUDES    :=
LDFLAGS     :=
DEFINES     :=

WX_LIBS ?= 


# simplePrintf.cu ContextManager.cu
LOCAL_SOURCES= Histogram.cu TemplateMatchingCore.cu DeviceManager.cu GpuImage.cu 
OBJECTS=$(SOURCES:.cu=.o)

$(info $$SOURCES are [$(SOURCES)])
$(info $$OBJECTS are [$(OBJECTS)])


# Forces stream synchronization after all kernels and asynchronous API calls (where wrapped) for proper debugging/ timing.
#DEFINES += -DHEAVY_ERROR_CHECKING=true    
#DEFINES += -DDEBUG_MODE=true    

#--warn-on-double-precision-use
NVCCFLAGS += --default-stream per-thread -m64 -O3 --use_fast_math
NVCCFLAGS += -Xptxas --warn-on-local-memory-usage,--warn-on-spills, --generate-line-info
NVCCFLAGS += -Xcompiler= -std=c++11 -Xlinker -lculibos
NVCCFLAGS += -lfftw3f,-ltiff,-pthread,-fopenmp --gpu-architecture=compute_70 --gpu-code=sm_70,sm_75

INCLUDES += $(WX_LIBS) -I$(CUDA_PATH)/samples/7_CUDALibraries/common/UtilNPP -I$(CUDA_PATH)/samples/common/inc

LDFLAGS += --cudart=static -lcufft_static -lnppc_static -lnppial_static -lnppist_static -lcurand_static -lculibos -lcudart_static  -L$(CUDA_PATH)/lib64 -L$(CUDA_PATH)/nvvm/lib64 

# -L$(WX_PATH)/lib 

DEFINES += -D _FILE_OFFSET_BITS=64 -DWXUSINGDLL  -DGPU   -D__WXGTK__ -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -Dwx_is_available=1 -DwxUSE_GUI=0

SMS ?= 70 75

all: $(OBJECTS) link.o libgpucore.a

$(OBJECTS):$(SOURCES)
+++$(NVCC) $(NVCCFLAGS) $(DEFINES) $(INCLUDES) --device-c $^

link.o : $(OBJECTS)
+++$(NVCC) $(NVCCFLAGS) $(DEFINES) $(INCLUDES) --device-link  $^ --output-file $@ $(LDFLAGS)

libgpucore.a: link.o $(OBJECTS) 
+++$(NVCC) $(NVCCFLAGS) --lib --output-file $@ $^

clean: 
+++rm *.o







 
